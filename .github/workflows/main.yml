# ------------------------------------
# File: .github/workflows/main.yml
# Description: GitHub Actions workflow for building and deploying to Azure
# ------------------------------------
name: Build and Deploy to Azure

on:
  push:
    branches:
      - ft/pipelineb

env:
  AZURE_RESOURCE_GROUP: "todo-devops-rg"
  AZURE_LOCATION: "southafricanorth"
  # This is the environment name that will be used to name resources
  ENVIRONMENT: "staging"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Placeholder for your Docker build steps.
      # This step will build the image and push to ACR.
      - name: Build and Push Docker Image (example)
        run: echo "Building and pushing Docker image..."
        # Replace with your actual Docker build and push commands

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # CORRECTED: This step now correctly logs the GitHub runner into Azure by
      # passing a single JSON string to the 'creds' input.
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}", "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}", "tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -reconfigure -backend-config="resource_group_name=${{ env.AZURE_RESOURCE_GROUP }}" -backend-config="storage_account_name=tdopsbienaimeetfstate" -backend-config="container_name=tfstate" -backend-config="key=staging.tfstate"
        working-directory: ./terraform/azure

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform/azure

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan -var="environment=${{ env.ENVIRONMENT }}"
        working-directory: ./terraform/azure

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform/azure
